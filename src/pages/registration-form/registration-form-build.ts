import {Validator} from "../../utils/field_validator.ts";
import Form from "../../components/form/form.ts";
import "./registration-form.css";

export const registrationForm = new Form(
    {
        className: 'registration-form',
        srcName: '',
        title: {
            className: 'registration-form__title',
            text: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
            tag: 'h2'
        },
        button: {
            className: 'registration-form__button',
            typeName: 'submit',
            text: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'
        },
        toggleButtons: [
            {
                className: 'form-toggle',
                typeName: 'button',
                text: 'üëÅ'
            },
            {
                className: 'form-toggle-two',
                typeName: 'button',
                text: 'üëÅ'
            }
        ],
        labelFieldClassName: 'registration-form__label',
        inputFieldClassName: 'registration-form__input',
        errorMessageClassName: 'registration-form__error-message',
        link: {
            className: 'registration-form__login',
            href: '#',
            text: '–í–æ–π—Ç–∏',
        },
        fields: [
            {
                labelText: '–ü–æ—á—Ç–∞',
                inputName: 'email',
                inputType: 'text',
                inputPlaceholder: '',
                validator: Validator.validateEmail,
                errorMessage: '–ø–æ—á—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            },
            {
                labelText: '–õ–æ–≥–∏–Ω',
                inputName: 'login',
                inputType: 'text',
                inputPlaceholder: '',
                validator: Validator.validateLogin,
                errorMessage: '–ª–æ–≥–∏–Ω –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',

            },
            {
                labelText: '–ò–º—è',
                inputName: 'first_name',
                inputType: 'text',
                inputPlaceholder: '',
                validator: Validator.validateName,
                errorMessage: '–∏–º—è –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            },
            {
                labelText: '–§–∞–º–∏–ª–∏—è',
                inputName: 'second_name',
                inputType: 'text',
                inputPlaceholder: '',
                validator: Validator.validateName,
                errorMessage: '—Ñ–∞–º–∏–ª–∏—è –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            },
            {
                labelText: '–¢–µ–ª–µ—Ñ–æ–Ω',
                inputName: 'phone',
                inputType: 'phone',
                inputPlaceholder: '',
                validator: Validator.validatePhone,
                errorMessage: '—Ç–µ–ª–µ—Ñ–æ–Ω –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            },
            {
                labelText: '–ü–∞—Ä–æ–ª—å',
                inputName: 'login',
                inputType: 'password',
                inputPlaceholder: '',
                validator: Validator.validateLogin,
                errorMessage: '–ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            },
            {
                labelText: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å',
                inputName: "repeatPassword",
                inputType: 'password',
                inputPlaceholder: '',
                validator: Validator.validatePassword,
                errorMessage: '–ø–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç',
            }
        ],
    })